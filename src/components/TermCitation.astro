---
import {formatDate} from "../utils/formatDate";
const { term } = Astro.props

if (!term.data.author || !term.data.pubDate) {
    return;
}

---
<h2 class="relative">
    Cite This
    <button id="copy_button" type="button" class="relative ml-4 text-xs text-gray-700 bg-gray-200 hover:bg-gray-400 font-medium rounded-lg p-2.5 text-center inline-flex items-center me-2 dark:text-gray-300 dark:bg-gray-700">
        <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
            <path stroke="currentColor" stroke-linejoin="round" stroke-width="2" d="M9 8v3a1 1 0 0 1-1 1H5m11 4h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-7a1 1 0 0 0-1 1v1m4 3v10a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1v-7.13a1 1 0 0 1 .24-.65L7.7 8.35A1 1 0 0 1 8.46 8H13a1 1 0 0 1 1 1Z"/>
        </svg>
        <span id="copy_tooltip" role="tooltip" class="absolute left-12 w-44 z-10 transition-opacity duration-300 inline-block px-3 py-2 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-xs opacity-0 tooltip dark:bg-gray-700">
            Copied to clipboard
        </span>
    </button>
</h2>
<span id="citation_text" class="mr-6">{term.data.author}. "{term.data.title}." <em>The Living Glossary of Digital Narrative</em>, {formatDate(term.data.pubDate, 'y')}. https://glossary.cdn.uib.no/terms/{term.id}</span>

<script is:inline data-astro-rerun>
document.addEventListener('astro:page-load', () => {
    const copyButton = document.getElementById("copy_button");
    const citationText = document.getElementById("citation_text");
    const tooltip = document.getElementById('copy_tooltip');
    if (!copyButton || !citationText || !tooltip) return;
    copyButton.addEventListener('click', () => {
        navigator.clipboard.writeText(citationText.innerText)
        tooltip.classList.remove('opacity-0');
        setTimeout(() => {
            tooltip.classList.add('opacity-0');
        }, 1000);
    });
});
</script>